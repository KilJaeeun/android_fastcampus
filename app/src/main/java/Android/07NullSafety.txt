

Null Safety
-> Null 에 대해서 안전하다.
-> 코틀린의 특징

Null vs 0
->  0: 휴지를 다 쓰고 휴지심만 남은 상태
-> Null: 휴지심도 없다. 존재하지 않는 상태, 모르는 상태

Null  이 안전하지 않은 이유
-> 0 +10 = 10
-> null + 10 =? 에러
-> button.setOnclickListener
-> null.setonclickListener -> 에러
-> null point exception error 가 발생한다.

if( number != null ) {

number +10
}

if (button !=null ) {

button.setOnClickListener
}
// null check 가 진짜 번거롭다. 이것을 사람의 기량으로 하지말고, 문법적 오류로 만들어 에러를 피할 수 있을 까/ ? => Null Safety

코틀린이 Null Safety하기 위해 사용하는 문법
 -> ?: null 이 아니라면 이하 구문 실행
 -> !! : null이 아님을 개발자가 보장한다.

 사용방법
 button?.setOnClickListener
 button!!.setOnClickListener

Null 이 될 수 있는 타입
Int, Double, Float, CLass -> Null 이 될 수 없는 타입
Int?, Double?, Float?, Class? => Null 이 될 수 있는 타입

